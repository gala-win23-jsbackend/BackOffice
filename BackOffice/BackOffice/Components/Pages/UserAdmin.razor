@page "/useradmin"
@layout BackOffice.Components.Layout.MainLayout
@using BackOffice.Data
@using BackOffice.Models
@inject HttpClient Http

@rendermode InteractiveServer

@attribute [StreamRendering]

<h3 class="header-title">UserAdmin</h3>

<section class="useradmin">
    <div class="container">
        @if (!string.IsNullOrEmpty(@StatusMessage))
        {
            <div class="alert alert-danger" role="alert">
                @StatusMessage
            </div>
        }

        @if (users != null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Roles</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        userId = new UserId { Id = user.Id };
                        var linkUpdate = $"/updateuser/{user.Id}";
                        <tr>
                            <td>@user.FirstName @user.LastName</td>
                            <td>@user.Email</td>
                            @if (user.Roles == null || !user.Roles.Any())
                            {
                                <td>No current roles added to this user</td>
                            }
                            else
                            {
                                var rolesString = string.Join(", ", user.Roles);
                                <td>@rolesString</td>

                            }

                            <td>
                                <a href="@linkUpdate"><button class="btn btn-theme-s">Update</button></a>
                                <EditForm Model="userId" OnValidSubmit="@(() => Delete(userId))" novalidate>
                                    <InputText type="hidden" @bind-Value="userId.Id" />
                                    <button type="submit" class="btn btn-red-s">Delete</button>
                                </EditForm>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No users found</p>
        }

    </div>
</section>


@code {
    private IEnumerable<UsersWithRoles> users = null!;

    private string StatusMessage { get; set; } = null!;

    public UserId userId = new UserId();

    public class UserId
    {
        public string Id { get; set; } = null!;
    }

    public async Task Delete(UserId userId)
    {
               // var response = await Http.PostAsJsonAsync($"http://localhost:7093/api/DeleteUser", userId);

        var response = await Http.PostAsJsonAsync($"https://userprovider-silicon-gala.azurewebsites.net/api/DeleteUser?code=tFBR5RPYIlfjKLPZ0D_vZ8SMCu2_fDVKYji8JN6CVIstAzFu1_KPSA%3D%3D/DeleteUser", userId);
       //var response = await Http.PostAsJsonAsync(Configuration.GetValue<string>("API:DeleteUser"), userId);

        if (response.IsSuccessStatusCode)
        {
            StatusMessage = "User deleted";
            await OnInitializedAsync();
        }
        else
        {
            StatusMessage = "User not deleted";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // var response = await Http.GetFromJsonAsync<IEnumerable<UsersWithRoles>>("http://localhost:7093/api/GetUsersRoles");

            var response = await Http.GetFromJsonAsync<IEnumerable<UsersWithRoles>>("https://userprovider-silicon-gala.azurewebsites.net/api/GetUsersRoles?code=UGlx2XkX4mkFrUPEB97YHjVtUQTHMQxXbG9zP17dqY1OAzFuEVUHwQ%3D%3D");

            //var response = await Http.GetFromJsonAsync<IEnumerable<UsersWithRoles>>(Configuration.GetValue<string>("API:GetUsersRoles"));
            if (response != null)
            {
                users = response;
            }
            else
            {
                StatusMessage = "No users found";
            }
        }
        catch (Exception ex)
        {
            StatusMessage = $"{ex.Message}";
        }
    }
}
