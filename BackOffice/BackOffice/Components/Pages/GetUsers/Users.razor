@page "/users"
@using BackOffice.Data
@inject HttpClient Http

<PageTitle>Users</PageTitle>

<h1>Users</h1>


<a href="user/update" class="btn-theme">Update User</a>
<a href="user/update" class="btn-gray">DeleteUser</a>



@if (loading)
{
    <p><em>Loading Users...</em></p>
}
else
{
    @if (users == null)
    {
        <p>No users found.</p>
    }
    else
    {
        @foreach (var item in users)
        {
            <div>
                <p class="fw-bold">Email: @item.Email</p>
                <p>UserName: @item.UserName</p>
                <p>Id: @item.Id</p>

                @if (item.UserProfile != null)
                {
                    <p>First Name: @item.UserProfile.FirstName</p>
                    <p>Last Name: @item.UserProfile.LastName</p>
                }
                else
                {
                    <p>No user found.</p>
                }

                @if (item.UserAddress != null)
                {
                    <p>Address Line 1: @item.UserAddress.AddressLine_1</p>
                    <p>Address Line 2: @item.UserAddress.AddressLine_2</p>
                    <p>Postal Code: @item.UserAddress.PostalCode</p>
                    <p>City: @item.UserAddress.City</p>
                }
                else
                {
                    <p>No user's address found.</p>
                }
            </div>
        }
    }

}






@code {
    private ApplicationUser[]? users;

    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<ApplicationUser[]>("KOKKOKOKOKOhttps://userprovider-silicon-et.azurewebsites.net/api/KOD");
        loading = false;
    }
}



